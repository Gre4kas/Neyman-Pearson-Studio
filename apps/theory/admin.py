from django.contrib import admin
from django.utils.html import format_html
from django.urls import reverse
from django.forms import Textarea
from django.db import models
from .models import Article
import re

@admin.register(Article)
class ArticleAdmin(admin.ModelAdmin):
    list_display = ('title', 'order', 'created_at', 'preview_link')
    search_fields = ('title', 'content_md')
    prepopulated_fields = {'slug': ('title',)}
    list_editable = ('order',)
    
    formfield_overrides = {
        models.TextField: {'widget': Textarea(attrs={'rows': 20, 'cols': 80})},
    }
    
    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('title', 'slug', 'order')
        }),
        ('–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç–∞—Ç—å–∏ (Markdown)', {
            'fields': ('content_md', 'markdown_help'),
            'description': '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Markdown –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –∑–∞–≥–æ–ª–æ–≤–∫–∏, —Å–ø–∏—Å–∫–∏, —Å—Å—ã–ª–∫–∏, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, —Ç–∞–±–ª–∏—Ü—ã –∏ —Ñ–æ—Ä–º—É–ª—ã LaTeX.'
        }),
        ('–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç—å–∏', {
            'fields': ('live_preview_area',),
            'description': '–ñ–∏–≤–æ–π –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç—å–∏ - –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏'
        })
    )
    
    readonly_fields = ('content_html', 'preview_link', 'live_preview_area', 'markdown_help')
    

    def markdown_help(self, obj):
        """–°–ø—Ä–∞–≤–∫–∞ –ø–æ Markdown"""
        return format_html('''
        <div style="background: #f8f9fa; border: 1px solid #dee2e6; padding: 15px; border-radius: 5px; margin-bottom: 10px;">
            <h4 style="margin-top: 0; color: #495057;">–°–ø—Ä–∞–≤–∫–∞ –ø–æ Markdown:</h4>
            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; font-size: 12px;">
                <div>
                    <strong>–ó–∞–≥–æ–ª–æ–≤–∫–∏:</strong><br>
                    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ 1<br>
                    ## –ó–∞–≥–æ–ª–æ–≤–æ–∫ 2<br>
                    ### –ó–∞–≥–æ–ª–æ–≤–æ–∫ 3<br><br>
                    
                    <strong>–¢–µ–∫—Å—Ç:</strong><br>
                    **–∂–∏—Ä–Ω—ã–π**<br>
                    *–∫—É—Ä—Å–∏–≤*<br>
                    `–∫–æ–¥`<br><br>
                    
                    <strong>–°–ø–∏—Å–∫–∏:</strong><br>
                    - –≠–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞<br>
                    1. –ù—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫<br>
                </div>
                <div>
                    <strong>–°—Å—ã–ª–∫–∏ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:</strong><br>
                    [—Ç–µ–∫—Å—Ç —Å—Å—ã–ª–∫–∏](URL)<br>
                    ![alt —Ç–µ–∫—Å—Ç](URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)<br><br>
                    
                    <strong>–§–æ—Ä–º—É–ª—ã LaTeX:</strong><br>
                    $E = mc^2$ - –≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è<br>
                    $$x = \\frac{{-b \\pm \\sqrt{{b^2-4ac}}}}{{2a}}$$ - –±–ª–æ—á–Ω–∞—è<br><br>
                    
                    <strong>–¢–∞–±–ª–∏—Ü—ã:</strong><br>
                    | –ó–∞–≥–æ–ª–æ–≤–æ–∫ | –ó–∞–≥–æ–ª–æ–≤–æ–∫ |<br>
                    |-----------|-----------|<br>
                    | –Ø—á–µ–π–∫–∞    | –Ø—á–µ–π–∫–∞    |<br>
                </div>
            </div>
        </div>
        ''')
    
    markdown_help.short_description = "üìö –°–ø—Ä–∞–≤–∫–∞"
    
    def live_preview_area(self, obj):
        """–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç—å–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ HTML"""
        stats_html = ""
        content_html = ""
        
        if obj and obj.content_html:
            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            clean_content = re.sub('<[^<]+?>', ' ', obj.content_html)
            clean_content = re.sub(r'\s+', ' ', clean_content).strip()
            
            char_count = len(clean_content)
            word_count = len([w for w in clean_content.split() if w])
            
            # –ü–æ–¥—Å—á–µ—Ç LaTeX —Ñ–æ—Ä–º—É–ª
            latex_inline = len(re.findall(r'\$[^$]+\$', obj.content_html))
            latex_block = len(re.findall(r'\$\$[^$]+\$\$', obj.content_html))
            latex_count = latex_inline + latex_block
            
            stats_html = format_html(
                '<div style="background: #e8f4f8; border: 1px solid #bee5eb; padding: 8px 12px; margin-bottom: 10px; border-radius: 4px; font-size: 12px; color: #0c5460;">'
                '<strong>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</strong> {} —Å–∏–º–≤–æ–ª–æ–≤ ‚Ä¢ {} —Å–ª–æ–≤ ‚Ä¢ {} —Ñ–æ—Ä–º—É–ª LaTeX'
                '</div>',
                char_count, word_count, latex_count
            )
            
            content_html = obj.content_html
        else:
            content_html = '<p style="text-align: center; color: #666; font-style: italic;">–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ—è–≤–∏—Ç—Å—è –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—å–∏</p>'

        return format_html('''
            <div style="border: 2px solid #007cba; border-radius: 8px; overflow: hidden;">
                <div style="background: linear-gradient(90deg, #007cba, #0056b3); color: white; padding: 12px 16px; font-weight: bold;">
                    <span style="font-size: 18px;">üëÅÔ∏è</span> –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç—å–∏ (HTML)
                </div>
                <div style="padding: 15px; background: white;">
                    {}
                    <div style="border: 2px dashed #28a745; border-radius: 4px; padding: 15px; background: #f8fff8; max-height: 500px; overflow-y: auto;">
                        {}
                    </div>
                </div>
            </div>
            <script src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
            <script>
                if (window.MathJax) {{
                    MathJax.typesetPromise().catch(err => console.log('MathJax error:', err));
                }}
            </script>
        ''', stats_html, content_html)
    
    live_preview_area.short_description = "üëÅÔ∏è –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä"
    
    def preview_link(self, obj):
        """–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç—å–∏ –Ω–∞ —Å–∞–π—Ç–µ"""
        if obj.pk and obj.slug:
            url = reverse('theory:detail', args=[obj.slug])
            return format_html(
                '<a href="{}" target="_blank" class="button" style="background: #28a745; color: white; padding: 6px 12px; border-radius: 4px; text-decoration: none; font-size: 12px;">'
                'üîó –û—Ç–∫—Ä—ã—Ç—å –Ω–∞ —Å–∞–π—Ç–µ'
                '</a>', 
                url
            )
        return format_html('<span style="color: #999; font-style: italic;">–°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Å—Ç–∞—Ç—å—é</span>')
    
    preview_link.short_description = "üåê –ü—Ä–æ—Å–º–æ—Ç—Ä"