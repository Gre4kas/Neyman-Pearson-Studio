from django.contrib import admin
from django.utils.html import format_html
from django.urls import reverse
from django.forms import Textarea
from django.db import models
from django.utils.safestring import mark_safe
from .models import Article
import re

class MarkdownWidget(Textarea):
    """–ö–∞—Å—Ç–æ–º–Ω—ã–π –≤–∏–¥–∂–µ—Ç –¥–ª—è Markdown —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞"""
    def __init__(self, attrs=None):
        default_attrs = {
            'rows': 25, 
            'cols': 100,
            'style': 'width: 100%; font-family: "Monaco", "Consolas", "Courier New", monospace; font-size: 14px; line-height: 1.5;'
        }
        if attrs:
            default_attrs.update(attrs)
        super().__init__(default_attrs)

    class Media:
        css = {
            'all': ('admin/css/theory_admin.css',)
        }
        js = ('admin/js/theory_admin.js',)

@admin.register(Article)
class ArticleAdmin(admin.ModelAdmin):
    list_display = ('title', 'order', 'created_at', 'preview_link')
    search_fields = ('title', 'content_md')
    prepopulated_fields = {'slug': ('title',)}
    list_editable = ('order',)
    
    def formfield_for_dbfield(self, db_field, request, **kwargs):
        if db_field.name == 'content_md':
            kwargs['widget'] = MarkdownWidget()
        return super().formfield_for_dbfield(db_field, request, **kwargs)
    
    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('title', 'slug', 'order'),
            'classes': ('wide',)
        }),
        ('–°–æ–¥–µ—Ä–∂–∏–º–æ–µ', {
            'fields': ('content_md', 'image_upload_help', 'markdown_help'),
            'description': '–°–æ–∑–¥–∞–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç–∞—Ç—å–∏ –∏—Å–ø–æ–ª—å–∑—É—è Markdown —Å–∏–Ω—Ç–∞–∫—Å–∏—Å',
            'classes': ('wide', 'collapse')
        }),
        ('–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä', {
            'fields': ('live_preview_area',),
            'classes': ('wide',)
        })
    )
    
    readonly_fields = ('content_html', 'preview_link', 'live_preview_area', 'markdown_help', 'image_upload_help')
    
    class Media:
        css = {
            'all': ('admin/css/theory_admin.css',)
        }
        js = ('admin/js/theory_admin.js',)
    
    def image_upload_help(self, obj):
        """–ü–æ–º–æ—â—å –ø–æ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∑–∫–∏"""
        return format_html('''
        <div class="collapsible-section">
            <div class="collapsible-header" onclick="toggleCollapsible('image-help')">
                <span class="icon">üì∑</span>
                <span class="title">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏</span>
                <span class="arrow">‚ñº</span>
            </div>
            <div class="collapsible-content" id="image-help" aria-hidden="true" style="display:none;">
                
                <!-- –ö–∞—Ç–∞–ª–æ–≥ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π -->
                <div class="uploaded-images-section">
                    <div class="section-header">
                        <h4>üìÇ –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</h4>
                        <button type="button" onclick="loadUploadedImages()" class="refresh-btn">üîÑ –û–±–Ω–æ–≤–∏—Ç—å</button>
                    </div>
                    
                    <div class="images-grid" id="uploadedImagesList">
                        <div class="loading-message">üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...</div>
                    </div>
                </div>
                
                <div class="section-divider"></div>
                
                <!-- –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è -->
                <div class="upload-section">
                    <div class="section-header">
                        <h4>‚¨ÜÔ∏è –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</h4>
                    </div>
                    <div class="upload-zone" onclick="document.getElementById('imageUpload').click()">
                        <div class="upload-icon">ÔøΩ</div>
                        <div class="upload-text">
                            <strong>–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</strong>
                            <small>–∏–ª–∏ –ø–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª —Å—é–¥–∞</small>
                        </div>
                        <input type="file" id="imageUpload" accept="image/*" class="visually-hidden">
                    </div>
                    
                    <div class="upload-progress" id="uploadProgress" style="display:none;">
                        <div class="progress-bar">
                            <div class="progress-fill"></div>
                        </div>
                        <span class="progress-text">–ó–∞–≥—Ä—É–∑–∫–∞...</span>
                    </div>
                    
                    <div class="upload-result" id="uploadResult" style="display:none;">
                        <div class="result-text">‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!</div>
                        <div class="result-code">
                            <strong>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–¥:</strong>
                            <input type="text" id="generatedCode" readonly>
                            <button type="button" onclick="copyToClipboard()" class="copy-btn">üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å</button>
                        </div>
                    </div>
                </div>
                
                <div class="section-divider"></div>
                
                <div class="help-methods">
                    <div class="method">
                        <h5>üì§ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞:</h5>
                        <code>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º—É –≤—ã—à–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏</code>
                        <p>–§–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ <strong>/media/theory/images/</strong></p>
                    </div>
                    <div class="method">
                        <h5>üåê –í–Ω–µ—à–Ω—è—è —Å—Å—ã–ª–∫–∞:</h5>
                        <code>![–æ–ø–∏—Å–∞–Ω–∏–µ](https://example.com/image.jpg)</code>
                        <p>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞</p>
                    </div>
                    <div class="method">
                        <h5>üéØ –° —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ–º:</h5>
                        <code>&lt;div align="center"&gt;<br>![–æ–ø–∏—Å–∞–Ω–∏–µ](–ø—É—Ç—å_–∫_–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é)<br>&lt;/div&gt;</code>
                        <p>–¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ</p>
                    </div>
                    <div class="method">
                        <h5>üìè –° —Ä–∞–∑–º–µ—Ä–æ–º:</h5>
                        <code>&lt;img src="–ø—É—Ç—å" width="300" alt="–æ–ø–∏—Å–∞–Ω–∏–µ"&gt;</code>
                        <p>–ö–æ–Ω—Ç—Ä–æ–ª—å —Ä–∞–∑–º–µ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</p>
                    </div>
                </div>
            </div>
        </div>
        ''')
    
    image_upload_help.short_description = ""

    def markdown_help(self, obj):
        """–°–ø—Ä–∞–≤–∫–∞ –ø–æ Markdown"""
        return format_html('''
        <div class="collapsible-section">
            <div class="collapsible-header" onclick="toggleCollapsible('markdown-help')">
                <span class="icon">üìö</span>
                <span class="title">–°–ø—Ä–∞–≤–∫–∞ –ø–æ Markdown</span>
                <span class="arrow">‚ñº</span>
            </div>
            <div class="collapsible-content" id="markdown-help" aria-hidden="true" style="display:none;">
                <div class="help-grid">
                    <div class="help-column">
                        <div class="help-section">
                            <h5>üìù –ó–∞–≥–æ–ª–æ–≤–∫–∏</h5>
                            <div class="code-examples">
                                <code># –ó–∞–≥–æ–ª–æ–≤–æ–∫ 1</code><br>
                                <code>## –ó–∞–≥–æ–ª–æ–≤–æ–∫ 2</code><br>
                                <code>### –ó–∞–≥–æ–ª–æ–≤–æ–∫ 3</code>
                            </div>
                        </div>
                        
                        <div class="help-section">
                            <h5>‚úèÔ∏è –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞</h5>
                            <div class="code-examples">
                                <code>**–∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç**</code><br>
                                <code>*–∫—É—Ä—Å–∏–≤*</code><br>
                                <code>`–∫–æ–¥`</code>
                            </div>
                        </div>
                        
                        <div class="help-section">
                            <h5>üìù –°–ø–∏—Å–∫–∏</h5>
                            <div class="code-examples">
                                <code>- –≠–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞</code><br>
                                <code>1. –ù—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π</code><br>
                                <code>2. –°–ø–∏—Å–æ–∫</code>
                            </div>
                        </div>
                    </div>
                    
                    <div class="help-column">
                        <div class="help-section">
                            <h5>üîó –°—Å—ã–ª–∫–∏</h5>
                            <div class="code-examples">
                                <code>[—Ç–µ–∫—Å—Ç —Å—Å—ã–ª–∫–∏](URL)</code><br>
                                <code>[Google](https://google.com)</code>
                            </div>
                        </div>
                        
                        <div class="help-section">
                            <h5>üßÆ –§–æ—Ä–º—É–ª—ã LaTeX</h5>
                            <div class="code-examples">
                                <code>$E = mc^2$ - –≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è</code><br>
                                <code>$$x = \\frac{{a+b}}{{c}}$$ - –±–ª–æ—á–Ω–∞—è</code>
                            </div>
                        </div>
                        
                        <div class="help-section">
                            <h5>üìä –¢–∞–±–ª–∏—Ü—ã</h5>
                            <div class="code-examples">
                                <code>| –ó–∞–≥–æ–ª–æ–≤–æ–∫ | –ó–∞–≥–æ–ª–æ–≤–æ–∫ |</code><br>
                                <code>|-----------|-----------|</code><br>
                                <code>| –Ø—á–µ–π–∫–∞    | –Ø—á–µ–π–∫–∞    |</code>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        ''')
    
    markdown_help.short_description = ""
    
    def live_preview_area(self, obj):
        """–ö—Ä–∞—Å–∏–≤—ã–π –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç—å–∏"""
        if obj and obj.content_html:
            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            clean_content = re.sub('<[^<]+?>', ' ', obj.content_html)
            clean_content = re.sub(r'\s+', ' ', clean_content).strip()
            
            char_count = len(clean_content)
            word_count = len([w for w in clean_content.split() if w])
            
            # –ü–æ–¥—Å—á–µ—Ç LaTeX —Ñ–æ—Ä–º—É–ª
            latex_inline = len(re.findall(r'\$[^$]+\$', obj.content_html))
            latex_block = len(re.findall(r'\$\$[^$]+\$\$', obj.content_html))
            latex_count = latex_inline + latex_block
            
            return format_html('''
                <div class="preview-container">
                    <div class="preview-header">
                        <span class="preview-icon">üëÅÔ∏è</span>
                        <span class="preview-title">–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä</span>
                        <div class="preview-stats">
                            <span class="stat-item">üìù {} —Å–ª–æ–≤</span>
                            <span class="stat-item">‚úíÔ∏è {} —Å–∏–º–≤–æ–ª–æ–≤</span>
                            <span class="stat-item">üßÆ {} —Ñ–æ—Ä–º—É–ª</span>
                        </div>
                    </div>
                    <div class="preview-content">
                        <article>
                            <h1>{}</h1>
                            <hr>
                            <div id="article-content">{}</div>
                        </article>
                    </div>
                </div>
                <script>
                    (function() {{
                        function renderMath() {{
                            if (window.MathJax && window.MathJax.typesetPromise) {{
                                const content = document.getElementById('article-content');
                                if (content) {{
                                    window.MathJax.typesetPromise([content]).catch(err => console.error('MathJax error (admin preview):', err));
                                }}
                            }}
                        }}
                        renderMath();
                        setTimeout(renderMath, 500);
                        setTimeout(renderMath, 1500);
                    }})();
                </script>
            ''', word_count, char_count, latex_count, mark_safe(obj.title), mark_safe(obj.content_html))
        else:
            return format_html('''
                <div class="preview-container empty">
                    <div class="preview-header">
                        <span class="preview-icon">üëÅÔ∏è</span>
                        <span class="preview-title">–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä</span>
                    </div>
                    <div class="preview-content empty-content">
                        <p>üìù –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ—è–≤–∏—Ç—Å—è –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—å–∏</p>
                    </div>
                </div>
            ''')
    
    live_preview_area.short_description = ""
    
    def preview_link(self, obj):
        """–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç—å–∏ –Ω–∞ —Å–∞–π—Ç–µ"""
        if obj.pk and obj.slug:
            url = reverse('theory:detail', args=[obj.slug])
            return format_html(
                '<a href="{}" target="_blank" class="button preview-link">'
                'üîó –û—Ç–∫—Ä—ã—Ç—å –Ω–∞ —Å–∞–π—Ç–µ'
                '</a>', 
                url
            )
        return format_html('<span style="color: #999; font-style: italic;">–°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Å—Ç–∞—Ç—å—é</span>')
    
    preview_link.short_description = "üåê –ü—Ä–æ—Å–º–æ—Ç—Ä"